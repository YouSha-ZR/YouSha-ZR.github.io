(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{363:function(t,a,r){"use strict";r.r(a);var e=r(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"tomcat优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tomcat优化"}},[t._v("#")]),t._v(" tomcat优化")]),t._v(" "),r("h3",{attrs:{id:"_1-安装-tomcat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-tomcat"}},[t._v("#")]),t._v(" 1-安装 tomcat")]),t._v(" "),r("p",[t._v("此处省略！")]),t._v(" "),r("h3",{attrs:{id:"_2-启动-tomcat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动-tomcat"}},[t._v("#")]),t._v(" 2-启动 tomcat")]),t._v(" "),r("p",[t._v("  启动tomcat （图一），点击"),r("code",[t._v("server status")]),t._v(" 输入账户密码，需要到tomcat安装目录下的"),r("code",[t._v("conf--\x3etomcat-users.xml")]),t._v("新加用户配置如图二所示，进入图三界面。"),r("br"),t._v("\n图一："),r("br"),t._v(" "),r("img",{attrs:{src:"https://hg-tian-guangzhou.oss-cn-shenzhen.aliyuncs.com/docblog/%E5%B7%A5%E4%BD%9C%E4%BD%BF%E6%88%91%E5%BF%AB%E4%B9%90/tomcatYH/1598408602%281%29.jpg",alt:"qidong"}}),t._v("\n图二："),r("br"),t._v(" "),r("img",{attrs:{src:"https://hg-tian-guangzhou.oss-cn-shenzhen.aliyuncs.com/docblog/%E5%B7%A5%E4%BD%9C%E4%BD%BF%E6%88%91%E5%BF%AB%E4%B9%90/tomcatYH/1598409069%281%29.jpg",alt:"qidong"}}),t._v("\n图三："),r("br"),t._v(" "),r("img",{attrs:{src:"https://hg-tian-guangzhou.oss-cn-shenzhen.aliyuncs.com/docblog/%E5%B7%A5%E4%BD%9C%E4%BD%BF%E6%88%91%E5%BF%AB%E4%B9%90/tomcatYH/1598409210%281%29.jpg",alt:"qidong"}})]),t._v(" "),r("h3",{attrs:{id:"_3-优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-优化"}},[t._v("#")]),t._v(" 3-优化")]),t._v(" "),r("h4",{attrs:{id:"_3-1-禁用ajp连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-禁用ajp连接"}},[t._v("#")]),t._v(" 3-1 禁用AJP连接")]),t._v(" "),r("p",[t._v("在服务状态页面中可以看到，默认状态下会启用AJP服务，并且占用8009端口。"),r("br"),t._v(" "),r("img",{attrs:{src:"https://hg-tian-guangzhou.oss-cn-shenzhen.aliyuncs.com/docblog/%E5%B7%A5%E4%BD%9C%E4%BD%BF%E6%88%91%E5%BF%AB%E4%B9%90/tomcatYH/15605786-35f62e0541197150.png",alt:"qidong"}}),r("br"),t._v("\n什么是AJP呢？")]),t._v(" "),r("p",[t._v("AJP（Apache JServer Protocol）"),r("br"),t._v("\nAJPv13协议是面向包的。WEB服务器和Servlet容器通过TCP连接来交互；为了节省SOCKET创建的昂贵代价，"),r("br"),t._v("\nWEB服务器会尝试维护一个永久TCP连接到servlet容器，并且在多个请求和响应周期过程会重用连接。"),r("br"),t._v("\n我们一般是使用Nginx+tomcat的架构，所以用不着AJP协议，所以把AJP连接器禁用。"),r("br"),t._v("\n修改conf下的server.xml文件，将AJP服务禁用掉即可。")]),t._v(" "),r("h4",{attrs:{id:"_3-2-执行器（线程池）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-执行器（线程池）"}},[t._v("#")]),t._v(" 3-2 执行器（线程池）")]),t._v(" "),r("p",[t._v("在tomcat中每一个用户请求都是一个线程，所以可以使用线程池提高性能。"),r("br"),t._v("\n修改server.xml文件：")]),t._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[t._v("点击查看代码")]),t._v(" "),r("div",{staticClass:"language-.xml extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('\x3c!--\n\t执行器：\n\t参数说明：\n\tmaxThreads：最大并发数，默认150，一般设置在500~1000，需要根据硬件设施来判断，\n\tminSpareThreads：初始化时创建的线程数\n\tmaxSpareThreads:一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程\n\tprestartminSpareThreads: 在 Tomcat 初始化的时候就初始化 minSpareThreads 的参数值，\n\t\t\t\t\t\t\t如果不等于 true，minSpareThreads 的值就没啥效果了\n\tmaxQueueSize:最大的等待队列数，超过则拒绝请求\n\tmaxIdleTime:线程最大空闲时间\n\t--\x3e\n    <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"\n        maxThreads="500" minSpareThreads="50" prestartminSpareThreads="true" maxQueueSize="100"/>\n    \n\n\n')])])])]),t._v(" "),r("p",[t._v("保存退出，重启tomcat，查看效果。"),r("br"),t._v("\n在页面中显示最大线程数为-1，这个是正常的，仅仅是显示的问题，实际使用的指定的值。\n"),r("img",{attrs:{src:"https://hg-tian-guangzhou.oss-cn-shenzhen.aliyuncs.com/docblog/%E5%B7%A5%E4%BD%9C%E4%BD%BF%E6%88%91%E5%BF%AB%E4%B9%90/tomcatYH/1598426430%281%29.jpg",alt:"qidong"}}),r("br"),t._v(" "),r("a",[t._v("https://blog.csdn.net/weixin_38278878/article/details/80144397")])]),t._v(" "),r("h4",{attrs:{id:"_3-3-运行模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-运行模式"}},[t._v("#")]),t._v(" 3-3 运行模式")]),t._v(" "),r("p",[t._v("tomcat的运行模式有3种：")]),t._v(" "),r("p",[t._v("bio"),r("br"),t._v("\n默认的模式,性能非常低下,没有经过任何优化处理和支持."),r("br"),t._v("\nnio"),r("br"),t._v("\nnio(new I/O)，是Java SE 1.4及后续版本提供的一种新的I/O操作方式(即java.nio包及其子包)。"),r("br"),t._v("\nJava nio是一个基于缓冲区、并能提供非阻塞I/O操作的Java API，因此nio也被看成是non-blocking I/O的缩写。它拥有比传统I/O操作(bio)更好的并发运行性能。"),r("br"),t._v("\napr"),r("br"),t._v("\n安装起来最困难,但是从操作系统级别来解决异步的IO问题,大幅度的提高性能.")]),t._v(" "),r("p",[t._v("推荐使用nio，不过，在tomcat8中有最新的nio2，速度更快，建议使用nio2.")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('\x3c!--在Connector中设置executor属性指向上面的执行器--\x3e\n    <Connector executor="tomcatThreadPool" port="8080" protocol="org.apache.coyote.http11.Http11Nio2Protocol"\n               connectionTimeout="20000"\n               redirectPort="8443" />\n\n')])])]),r("p",[t._v("对于优化后的tomcat性能，可以使用 apache Jmeter 进行压力测试。Jemeter的使用下篇文章再说"),r("br"),t._v("\n目前很多项目都是使用springboot框架，springboot内置tomcat ，对于优化springboot内置tomcat以后再说"),r("br")]),r("p",{attrs:{align:"right"}},[t._v("发表日期：2020/8/26 15:38")]),r("p")])}),[],!1,null,null,null);a.default=n.exports}}]);